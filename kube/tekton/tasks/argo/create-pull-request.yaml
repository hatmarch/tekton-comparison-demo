apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-pull-request
spec:
  params:
    - name: GIT_REPO_NAME
      description: The name of the repo to generate the pull request in (in format 'owner/repo')
    - name: TARGET_BRANCH
      description: The name of the branch to merge into (e.g. uat)
    - name: SOURCE_BRANCH
      description: The name of the branch where the changes are we'd like pulled into TARGET_BRANCH (e.g. ci-test)
    - name: TITLE_OVERRIDE
      description: Set this to something if you don't want the title of the pull request to be generated programmatically
      default: ""
    - name: COMMENT_OVERRIDE
      description: Set this to something if you don't want the body/comment of the pull request to be generated programmatically
      default: ""
    - name: GIT_SECRET_NAME
      description: The name of the secret that allows us to push to the git repo (in git credential-store format).  Key should be git.store
  # results:
  #   - name: pull-request-id
  #     description: The id of the pull request created
  volumes:
    - name: git-secret
      secret:
        secretName: $(params.GIT_SECRET_NAME)
    - name: payload
      emptyDir: {}
  steps:
    - name: generate-payload-template
      image: quay.io/openshift/origin-cli:latest
      volumeMounts:
        - name: payload
          mountPath: /var/payload
      script: |
        #!/usr/bin/env bash
        set -euxo pipefail

        TITLE=${TITLE_OVERRIDE:-}
        if [[ -z "${TITLE}" ]]; then
          TITLE="Tekton Change Request"
        fi

        COMMENT=${COMMENT_OVERRIDE:-}
        if [[ -z "${COMMENT}" ]]; then
          CURRENT_PIPELINE=$(oc get po/${HOSTNAME} -o jsonpath="{.metadata.labels['tekton\.dev/pipelineRun']}")
          COMMENT="Autogenerated changes from pipeline ${CURRENT_PIPELINE}"
        fi

        cat <<EOF > /var/payload/payload_template.json
        {
          "base": "$(params.TARGET_BRANCH)",
          "head": "$(params.SOURCE_BRANCH)",
          "assignee": null,
          "assignees": null,
          "title": "${TITLE}",
          "body": "${COMMENT}",
          "labels": [],
          "milestone": null,
          "due_date": null
        }
        EOF
    - name: call-api
      image: registry.access.redhat.com/ubi8/ubi-minimal:latest
      volumeMounts:
        - name: payload
          mountPath: /var/payload
        - name: git-secret
          mountPath: /var/run/secrets/git
      script: |
        #!/usr/bin/env bash
        set -euxo pipefail

        function urldecode() { : "${*//+/ }"; echo -e "${_//%/\\x}"; }
        BASE_URL=$(urldecode $(cat /var/run/secrets/git/git.store))
        
        # FIXME: Debugging
        echo "BASE_URL is ${BASE_URL}"

        PAYLOAD_FILE=/var/payload/payload_template.json

        PULLREQUEST_API_URL="${BASE_URL}/api/v1/repos/$(params.GIT_REPO_NAME)/pulls"

        curl -vvv -X POST -H "Content-Type: application/json" -d @"${PAYLOAD_FILE}" ${PULLREQUEST_API_URL}
