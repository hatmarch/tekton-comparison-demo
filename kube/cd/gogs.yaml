---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gogs-postgresql
  annotations:
    image.openshift.io/triggers: >-
        [{"from":{"kind":"ImageStreamTag","name":"postgresql:latest", "namespace":"openshift"},"fieldPath":"spec.template.spec.containers[?(@.name==\"postgresql\")].image"}]
  labels:
    app: gogs
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: gogs
    app.kubernetes.io/name: gogs-postgresql
    app.kubernetes.io/part-of: gogs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gogs
      name: gogs-postgresql
  template:
    metadata:
      labels:
        app: gogs
        name: gogs-postgresql
    spec:
      containers:
      - name: postgresql
        imagePullPolicy: Always
        image: postgresql:latest
        env:
        - name: POSTGRESQL_USER
          value: gogs
        - name: POSTGRESQL_PASSWORD
          value: gogs
        - name: POSTGRESQL_DATABASE
          value: gogs
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: "100"
        - name: POSTGRESQL_SHARED_BUFFERS
          value: 12MB
        - name: POSTGRESQL_ADMIN_PASSWORD
          value: gogs
        ports:
        - containerPort: 5432
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: 5432
          timeoutSeconds: 1
          failureThreshold: 10
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c 'SELECT 1'
        resources:
          limits:
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: gogs-postgres-data
      volumes:
      - name: gogs-postgres-data
        persistentVolumeClaim:
          claimName: gogs-postgres-data
---
kind: Service
apiVersion: v1
metadata:
  name: gogs-postgresql
  labels:
    app: gogs
spec:
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432
  selector:
    name: gogs-postgresql
    app: gogs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gogs
  labels:
    app: gogs
    app.kubernetes.io/component: gogs
    app.kubernetes.io/instance: gogs
    app.kubernetes.io/name: gogs
    app.kubernetes.io/part-of: gogs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gogs
      name: gogs
  template:
    metadata:
      labels:
        app: gogs
        name: gogs
    spec:
      containers:
      - name: gogs
        imagePullPolicy: Always
        image: quay.io/siamaksade/gogs:stable
        ports:
        - containerPort: 3000
          protocol: TCP
        volumeMounts:
        - name: gogs-data
          mountPath: /opt/gogs/data
        - name: gogs-config
          mountPath: /etc/gogs/conf
        readinessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 40
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 10
        livenessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 40
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
      volumes:
      - name: gogs-data
        persistentVolumeClaim:
          claimName: gogs-data
      - name: gogs-config
        configMap:
          name: gogs-config
          items:
            - key: app.ini
              path: app.ini
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: gogs
  name: gogs
spec:
  ports:
  - name: 3000-tcp
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: gogs
    name: gogs
  type: ClusterIP
---
kind: Route
apiVersion: v1
id: gogs-http
metadata:
  labels:
    app: gogs
  name: gogs
spec:
  to:
    name: gogs
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: gogs-data
  labels:
    app: gogs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
--- 
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: gogs-postgres-data
  labels:
    app: gogs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi