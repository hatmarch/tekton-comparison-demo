
apiVersion: v1
kind: Template
metadata:
  name: pipeline-stage-template
  annotations:
    openshift.io/display-name: "Staging Pipeline Template"
    description: >-
      Creates an apache server to act as a proxy to turn insecure https into http (with a bearer token)
    tags: "monitoring"
    iconClass: "fa fa-exchange"
message: "Creating staging workloads"
parameters:
- description: The name of the staging project
  displayName: Staging Project
  name: STAGING_PROJECT
  value: petclinic-staging
  required: true
- description: The name of the application (ImageStream)
  displayName: Application Name
  name: APP_NAME
  value: petclinic
  required: true
objects:
- kind: Namespace
  apiVersion: v1
  metadata:
    name: ${STAGING_PROJECT}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: petclinic
    name: ${APP_NAME}
    namespace: ${STAGING_PROJECT}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: petclinic
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: petclinic
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - image: ${APP_NAME}:latest
          imagePullPolicy: Always
          name: petclinic
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - petclinic
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
          namespace: ${STAGING_PROJECT}
      type: ImageChange
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: petclinic
    name: ${APP_NAME}
    namespace: ${STAGING_PROJECT}
  spec:
    lookupPolicy:
      local: false
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APP_NAME}
    namespace: ${STAGING_PROJECT}
    labels:
      application: ${APP_NAME}
  spec:
    ports:
      - protocol: TCP
        port: 8080
        targetPort: 8080
    selector:
      deploymentconfig: ${APP_NAME}
    type: ClusterIP
    sessionAffinity: None
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: ${APP_NAME}
    namespace: ${STAGING_PROJECT}
    labels:
      application: ${APP_NAME}
  spec:
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    port:
      targetPort: 8080
    wildcardPolicy: None

  # FIXME: Service accounts and role bindings?
  